<% layout('./layouts/boilerplate') -%>
<body>
    <div class="container">
        <%- include('../partials/navbar') %>
        <% if(success && success.length) { %>
            <%- include('../partials/success') %>
        <% } else if (error && error.length) { %>
            <%- include('../partials/error') %>
        <% } %>
    
        <% let currentDate = new Date(); %>
        <% let surveyStartDate = surveyInstance.startDate ? new Date(surveyInstance.startDate) : new Date('2000-01-01'); %>
        <% let surveyEndDate = surveyInstance.endDate ? new Date(surveyInstance.endDate) : new Date('2099-12-31'); %>
    
        <% if (currentDate < surveyStartDate) { %>
            <p><b>Sorry, the survey has not started yet.</b></p>
        <% } else if (currentDate > surveyEndDate || surveyInstance.status === "Stopped") { %>
            <p><b>Oh no! The survey is already closed.</b></p>
        <% } else if (respondent.progress === 'completed') { %>
            <p><b>You have already taken the survey.</b></p>
        <% } else { %>
            <p>Welcome <b><%= respondent.respondentName %></b>, </p>
            <p>You have been invited by your organization administrator to take this survey. <%= survey.description %> We value your response and time.</p> 
            <h1><%= survey.name %></h1>
            <p>There are <%= questions.length %> questions in this survey, and it will take you approximately <%= Math.ceil(0.8 * questions.length) %> minutes to complete. <b>Your responses are purely confidential and will not be tagged against you.</b> All questions are compulsory, unless indicated otherwise. If you want to save your responses and come back to the same later on, please click <a href="#buttons">here</a> and click the save button.</p>
    
            <form id="surveyForm" action="/app/takeSurvey/<%= survey._id %>/<%= surveyInstance._id %>/<%= respondent._id %>" method="POST">
                <% for (category of uniqueCategories) { %>
                    <h4><%= category %></h4>
                    <div>
                        <% for (question of questions) { %>
                            <div class="mb-2">
                                <% if (question.category == category) { %>
                                    <p class="mb-1 question" data-question-id="<%= question._id %>">
                                        <b><%= question.question %></b> <span class="required">*</span>
                                        <span class="error-message" style="color: red; display: none;">(Required)</span>
                                    </p>
                                    <% for (let i = 5; i >= 1; i--) { %>
                                        <div class="d-flex mb-2">
                                            <input type="radio" name="responses[<%= question._id %>]" value="<%= i %>" class="answer-option me-2" 
                                                <% if (responseMap && responseMap[question._id] == i) { %> checked <% } %>
                                                required>
                                            <label class="small"><%= question['option' + i] %></label>
                                        </div>
                                    <% } %>
                                <% } %>
                            </div>
                        <% } %>
                    </div>
                <% } %>

                <div class="form-group mb-3 mt-3">
                    <label for="strengthsFeedback" class="form-label"><b>What are the good things about this area in your organization that you want to highlight?</b></label>
                    <textarea id="strengths" name="strengthsFeedback" rows="5" placeholder="Describe the strengths of this area..." class="form-control" required></textarea>
                </div>
            
                <div class="form-group">
                    <label for="improvements" class="form-label"><b>What can be improved about in this area in your organization?</b></label>
                    <textarea class="form-control" id="improvements" name="improvementsFeedback" rows="5" placeholder="Describe areas that need improvement..." required></textarea>
                </div>
                <div id="buttons" class="my-3">
                    <button type="submit" class="mb-5 btn btn-sm btn-primary">Complete</button>
                    <button type="button" id="saveProgress" class="mb-5 btn btn-sm btn-outline-primary">Save Progress</button>
                </div>
            </form>
    
            <!-- Sticky Footer -->
            <div id="progressFooter">
                <p><span id="answeredCount">0</span>/<%= totalQuestions %> questions answered</p>
            </div>
        <% } %>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const totalQuestions = <%= totalQuestions %>; // âœ… Now totalQuestions is properly defined
            const answeredCount = document.getElementById("answeredCount");
            const answerOptions = document.querySelectorAll(".answer-option");
            const submitButton = document.querySelector("#surveyForm button[type='submit']");
            const saveButton = document.getElementById("saveProgress");
            function updateProgress() {
                const answered = new Set();
                answerOptions.forEach(option => {
                    if (option.checked) {
                        answered.add(option.name);
                    }
                });
                answeredCount.textContent = answered.size;
            }
            function validateForm(event) {
                let allAnswered = true;
                document.querySelectorAll(".question").forEach(question => {
                    const questionId = question.getAttribute("data-question-id");
                    const radioButtons = document.querySelectorAll(`input[name='responses[${questionId}]']:checked`);
                    const errorMessage = question.querySelector(".error-message");
                    
                    if (radioButtons.length === 0) {
                        allAnswered = false;
                        errorMessage.style.display = "inline";
                    } else {
                        errorMessage.style.display = "none";
                    }
                });
                
                if (!allAnswered) {
                    event.preventDefault();
                    alert("Please answer all required questions before submitting.");
                }
            }
            function saveProgress() {
                const formData = new FormData(document.getElementById("surveyForm"));
                const jsonObject = {};

                // Convert FormData to JSON format
                formData.forEach((value, key) => {
                    if (key.startsWith("responses[")) {
                        let questionId = key.match(/\[(.*?)\]/)[1]; // Extracts questionId from "responses[QUESTION_ID]"
                        jsonObject.responses = jsonObject.responses || {};
                        jsonObject.responses[questionId] = value;
                    } else {
                        jsonObject[key] = value;
                    }
                });

                fetch("/app/takeSurvey/<%= survey._id %>/<%= surveyInstance._id %>/<%= respondent._id %>/save", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(jsonObject)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Progress saved successfully!");
                    } else {
                        alert("Failed to save progress: " + data.error);
                    }
                })
                .catch(error => {
                    alert("An error occurred while saving progress.");
                    console.error(error);
                });
            }
            answerOptions.forEach(option => {
                option.addEventListener("change", updateProgress);
            });
            submitButton.addEventListener("click", validateForm);
            saveButton.addEventListener("click", saveProgress);
            
            updateProgress();
        });
    </script>
    <style>
        /* Sticky Footer */
        #progressFooter {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background: #f8f9fa;
            padding: 1px;
            text-align: center;
            font-size: 12px;
            font-weight: bold;
            border-top: 1px solid #ccc;
        }
        .required {
            color: red;
        }
    </style>
</body>


